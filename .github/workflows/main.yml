name: CI Pipeline

on:
  push:
    branches:
      - docker-pipeline
  pull_request:
    branches:
      - docker-pipeline


jobs:
  prerequisites:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Display environment
        run: |
          java -version
          gradle -v
          docker ps # Check if containers are running
          docker images # Check existing images

  code_quality:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
    needs: [prerequisites]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Run GitHub CodeQL Action
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript,java'

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Upload Code Quality Report
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-report
          path: gl-code-quality-report.json
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'gl-code-quality-report.sarif'

  dependency_scanning:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
    needs: [prerequisites]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Run Dependency Scanning
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'gl-dependency-scanning-report.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'gl-dependency-scanning-report.sarif'

      - name: Upload Dependency Scanning Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-scanning-report
          path: gl-dependency-scanning-report.json

  unit_tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
    needs: [prerequisites]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Unit Tests
        run: |
          chmod +x ./gradlew
          ./gradlew test jacocoTestReport
        continue-on-error: true

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results/test/

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: build/reports/jacoco/
